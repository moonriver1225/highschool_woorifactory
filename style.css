@charset "utf-8";
@import url('https://fonts.googleapis.com/css2?family=Quicksand&display=swap');
*{margin: 0px; padding: 0px; box-sizing: border-box; font-family: "quicksnad"; }
ul,ol,li{
    list-style: none;
}
a{
    text-decoration: none;
}

section{
    width: 100%;
    /* 섹션이 브라우저 전체의 너비를 가지도록 하겠다는 코드입니다 */
    padding: 180px 0 150px;
    /* 섹션의 공간에 패딩을 부여하는데 padding-top 180, 좌우 패딩 X
    padding-bottom 150을 주겠다는 뜻입니다. */
}
section .inner{
    width: 1180px;
    /* 12컬럼 그리드를 사용하기 위해서 1180px로 합니다. */
    margin: 0 auto;
    /* inner를 가운데 배치하도록 하는 코드입니다
    바깥여백 중 위아래 주지 않고, 좌우로는 가운데에 배치될수
    있도록 auto를 부여합니다 */
}
section .inner h1{
    font: bold 24px/1 'arial';
    /* 폰트웨이트 굵게, 폰트크기는 24px, 폰트높이는
    1, 폰트 패밀리는 arial. */
    color: #555;
    /* 폰트 컬러는 #555  */
    margin-bottom: 50px;
    /* h1과 wrap과의 바깥 간격을 50px 부여합니다. */
    text-align: center;
    /* 글자를 가운데 정렬합니다. */
}
/* 플롯해제하기 */
/* wrap의 자식요소인 article을 float하면서 부모인 wrap이
자식요소들의 높이를 인식하지 못하게 되었음으로 높이를 인식
하도록 float를 해제하는 문구입니다. */
/* ::after를 무조건 잡아야합니다 */
section .inner .wrap:after{
    content: '';
    display: block;
    clear: both;
}
section .inner .wrap article{
    width: 280px;
    /* 12컬럼 그리드에서 4단은 280이기 때문에 */
    height: 200px;
    float: left;
    /* 블록요소를 좌우 배치하기 위해 float을 부여 */
    margin-right: 20px;
    /* 각각의 블록요소 간격을 준것 */
    position: relative;
    /* ㅇ */

    /* article영역을 벗어나는 컨텐츠를 잘라서 다른영역에 침범
    하지 않도록 합니다. */
    overflow: hidden;
}
/* 280에 모두 공통적으로 20px의 마진오른쪽을 주었기 때문에
1200px이 되면서 inner의 1180을 넘기게 되어 레이아웃이 깨집니다.
따라서 마지막 article요소를 선택한뒤 마진오른쪽을 0을 주어
1180px을 맞춰주어야 레이아웃이 알맞게 형성됩니다. */
.section .inner .wrap article:last-child{
    margin-right: 0px;
}
/* 이미지를 아티클안에 꽉채워서 넣기 위해 쓰는
3종 세트 코드입니다. 외우십시오. */
section .inner .wrap article img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* hover 이벤트시 커지는 효과에 트렌지션을 넣어줍니다. */
    transition: all 1s;
}
/* article에 hover시 img를 1.2배 키웁니다. */
section .inner .wrap article:hover img{
    transform: scale(1.2);
}

section .inner .wrap article p{
    font: 20px/1 'arial';
    color: #fff;
    position: absolute;
    z-index: 3;
    opacity: 0;
    transition: 0.5s;
}

section .inner .wrap article:hover p{
    opacity: 1;
}

section .inner .wrap article::after{
  /* 가상선택자를 사용하면 써야합니다. */
    content: '';
    display: block;
    /* 가상 선택자의 너비,높이를 지정하기 위해서 부여합니다 */
    background-color: rgba(82, 140, 73, 0.8);
    /* article과 같은 너비,높이의 가상선택자 마스크를 만듭니다. */
    width: 100%;
    height: 100%;

    /* after로 잡은 가상선택자 마스크를 겹치기 위해서 밑에
    3가지 코드를 작성합니다. */
    position: absolute;
    top: 0;
    left: 0;
    /* 호버시에 마스크가 이동하는데 트렌지션을 걸어줍니다. */
    transition: all 0.5s;
}

/* 첫번째 아티클의 after를 선택합니다. */
section .inner .wrap article:nth-of-type(1):after{
    top: 0; left: 280px;
}

/* 첫번째 아티클에 호버할때 그때의 after */
section .inner .wrap article:nth-of-type(1):hover:after{
        top: 0; left: 230px;
        /* left:0이면 아티클위에 있고 음수를 주어야 왼쪽으로
        가기 때문에 기존 280양수를 준 상태에서 -230을 주었습니다. */
}
section .inner .wrap article:nth-of-type(1) p{
    /* p태그 전체에 포지션을 부여하였기에 좌표설정 가능. */
    top: 35%;
    left: -5%;
    transform: rotate(90deg);
}

section .inner .wrap article:nth-of-type(2):after{
    top: -280; left: 0px;
}

section .inner .wrap article:nth-of-type(2):hover:after{
    top: 150px; left: 0px;
}

.section .inner .wrap article:nth-of-type(2) p{
    bottom: 7%; left: 35%;
}

section .inner .wrap article:nth-of-type(3):after{
    top: -280; left: 0px;
}

section .inner .wrap article:nth-of-type(3):hover:after{
    top: -150px; left: 0px;
}

section .inner .wrap article:nth-of-type(3) p{
    top: 7%; left: 35%;
}

section .inner .wrap article:nth-of-type(4):after{
    top: 0; left: -280px;
}

section .inner .wrap article:nth-of-type(4):hover:after{
    top: 0; left: -280px;
}

section .inner .wrap article:nth-of-type(4) p{
    top: 45%;
    right: -15%;
    transform: rotate(-90deg);
}
